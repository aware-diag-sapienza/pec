title	authors	venue	doi	researchGate	img	key	github_name	github_link	prototype_name	prototype_link	additional_name	additional_link	additional_icon	video_name	video_link	abstract	citeus
On Progressive Ensemble Clustering	Marco Angelini, Graziano Blasilli, Giorgio Cazzetta, Simone Lenti, Alessia Palleschi, Giuseppe Santucci				teaser	.png								Demonstrative<br>Video	https://www.dropbox.com/s/97wt3ry9dktwxb0/pec.mp4?dl=0	Ensemble clustering methods are gaining an increasing interest because their ability in combining a set of clusters from the same data to produce a better result as compared with individual components of the ensemble. The basic idea is to run $r$ clustering algorithms (or the same algorithm using $r$ different seeds) and to apply a consensus method on the $r$ results. The process is inherently parallel and, when response time is an issue, the $r$ clustering algorithms can be executed on $r$ parallel threads. This paper explores the challenging idea of using the intermediate results produced by the parallel clustering algorithms with the goals of providing both an early feedback to the user on what the ensemble methods is going to produce and delivering a progression of results that can be usefully exploited in progressive analysis like, e.g., Progressive Visual Analytics (PVA). While the paper is agnostic with respect to the adopted clustering algorithm and consensus method, being the unique prerequisite that the clustering algorithm ca be run in aprogressive way, the discussion is based on k-means, that is one of the most widely used technique in Viz applications, because of its simplicity and low computational complexity. The basic idea is to use a fraction of the available resources (e.g., one of the $r$ threads) to compute a progression of intermediate consensuses using the results produced by the remaining  $r-1$ threads and to leverage on this progression to inform the user on the whole process, allowing her to steer/terminate the overall analysis. This paper shows that in this scenario the overall quality is preserved with no or slight degradation, and some use cases and a demonstrative prototype make evident the advantages of the proposed solution.	